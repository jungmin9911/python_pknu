VSCode DockerFile

docker-compose
Jupyterlab
오라클DB
mySQL

Dockerfile 수정 후 (pkjm을 pkdata로)
해당 파일이 들어있는 폴더 우클릭 후 통합 테이블 열기
docker build -t myj:1.0 .

Dockerfile -> 이미지 못바꿈, 읽기전용 -> 컨테이너 (docker run ~~) 
docker-compose -> 컨테이너를 만들기 위해 

3306 => mysql 기본포트

docker exec -it mysql bash
mysql -uroot -p
비번 : 1234

<다른 데이터베이스로 위치 바꾸는 방법>
USE 데이터베이스명;

<CREATE> - CREATE, INSERT
- 데이터베이스 생성
  CREATE DATABASE mydb;
  CREATE DATABASE IF NOT EXISTS mydb;	// 없을 경우 생성
- 테이블 생성 (이 전에 USE 어쩌고로 db 연결해줘야됨. ex) USE mydb)
  CREATE TABLE t1(id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(100), age INT);
- 속성 삽입
  INSERT INTO t1 (name, age) VALUES ('hong', 27), ('superman', 44), ('mario', 33);
- 데이터베이스/테이블 목록 조회
  show databases;
  show tables;

<READ> - SELECT, SHOW
SHOW VARIABLES LIKE 'c%';
SHOW databases;
SHOW tables;
SELECT * FROM  t1;

<DELETE> - DELETE, DROP
DELETE FROM test.t2 WHERE id = '2';
DELETE FROM test.t2 WHERE name = 'm';
DROP DATABASE test;

<UPDATE> - UPDATE, GRANT, ALTER
UPDATE hangul.t1 SET name = '배트맨' WHERE id = '8';
GRANT ALL PRIVIEGES
ALTER TABLE 테이블명 (ADD, DROP, MODIFY, COLUMN) 컬럼명 데이터타입
JOIN:
	SELECT *
	FROM 테이블1 AS t1
	JOIN 테이블2 AS t2
	ON t1.공통컬럼 = t2.공통컬럼;

==================================================

초기 세팅
VS Code 확장에서 docker설치

1. VS Code에서 docker 초기 코드 작성 후 실행 (빌드 하라는 뜻)
2. docker desktop에 생성 확인, 동작 확인
3. cmd창에 docker exec -it mysql bash
4. mysql -uroot -p > 비번 1234
5. USE mydb;
6. 여기에서 CRUD 가능
7. 이 뒤에는... 카톡 돌아보기... (한글패치)

1. MySQL Workbench 설치 후 실행
2. 이름 : mydb / 아이디-비번 : root-1234 > 테스트 커넥션
3. 실행되면 스키마창 열고 내용 확인
4. 수업시간엔 test 스키마에 t2 테이블 생성하고 데이터 집어넣음
* 주의할 점. 생성할때 [스키마명.테이블명] 형식으로 넣어줘야됨. ex) test.t2


